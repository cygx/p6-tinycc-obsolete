# TinyCC [![Build Status](https://travis-ci.org/cygx/p6-tinycc.svg?branch=master)](https://travis-ci.org/cygx/p6-tinycc)

The Tiny C Compiler

# Synopsis

```
    use TinyCC;

    tcc.define(NAME => '"cygx"');
    tcc.compile(q:to/__END__/);
        int puts(const char *);
        int main(void) {
            puts("Hello, " NAME "!");
            return 0;
        }
        __END__

    tcc.run;
    tcc.delete;
```

```
    use TinyCC::Eval;
    use NativeCall;

    my @out := CArray[uint64].new;
    @out[0] = 0;

    EVAL q:to/__END__/, :lang<C>, :symbols(:@out), :defines(N => 33);
        extern unsigned long long out;

        static unsigned long long fib(unsigned n) {
            return n < 2 ? n : fib(n - 1) + fib(n - 2);
        }

        int main() {
            out = fib(N);
        }
        __END__
```

# Description

Tries to load TinyCC from the shared library specified in `%*ENV<LIBTCC>`,
falling back to plain `'libtcc'`.

Alternatively, a list of candidates can be passed to the use statement:

    use TinyCC <path/1/libtcc.so path/2/libtcc.so>;

The current development version of TinyCC itself can be found at
[repo.or.cz/w/tinycc.git](http://repo.or.cz/w/tinycc.git); the embedding API
is documented in [libtcc.h](http://repo.or.cz/w/tinycc.git/blob/HEAD:/libtcc.h).

The `TCC` class provides the following methods:

__API__


# Bugs and Development

Development happens at [GitHub](https://github.com/cygx/p6-tinycc). If you
found a bug or have a feature request, use the
[issue tracker](https://github.com/cygx/p6-tinycc/issues) over there.


# Copyright and License

Copyright (C) 2015 by <cygx@cpan.org>

Distributed under the
[Boost Software License, Version 1.0](http://www.boost.org/LICENSE_1_0.txt)
